# Generated from SimpleLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,94,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
        1,7,1,8,4,8,47,8,8,11,8,12,8,48,1,9,4,9,52,8,9,11,9,12,9,53,1,9,
        1,9,5,9,58,8,9,10,9,12,9,61,9,9,1,10,1,10,5,10,65,8,10,10,10,12,
        10,68,9,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        3,11,81,8,11,1,12,3,12,84,8,12,1,12,1,12,1,13,4,13,89,8,13,11,13,
        12,13,90,1,13,1,13,1,66,0,14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,1,0,2,1,0,48,57,2,0,9,9,32,32,
        100,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,1,0,0,0,
        3,31,1,0,0,0,5,33,1,0,0,0,7,35,1,0,0,0,9,37,1,0,0,0,11,39,1,0,0,
        0,13,41,1,0,0,0,15,43,1,0,0,0,17,46,1,0,0,0,19,51,1,0,0,0,21,62,
        1,0,0,0,23,80,1,0,0,0,25,83,1,0,0,0,27,88,1,0,0,0,29,30,5,45,0,0,
        30,2,1,0,0,0,31,32,5,42,0,0,32,4,1,0,0,0,33,34,5,47,0,0,34,6,1,0,
        0,0,35,36,5,37,0,0,36,8,1,0,0,0,37,38,5,43,0,0,38,10,1,0,0,0,39,
        40,5,94,0,0,40,12,1,0,0,0,41,42,5,40,0,0,42,14,1,0,0,0,43,44,5,41,
        0,0,44,16,1,0,0,0,45,47,7,0,0,0,46,45,1,0,0,0,47,48,1,0,0,0,48,46,
        1,0,0,0,48,49,1,0,0,0,49,18,1,0,0,0,50,52,7,0,0,0,51,50,1,0,0,0,
        52,53,1,0,0,0,53,51,1,0,0,0,53,54,1,0,0,0,54,55,1,0,0,0,55,59,5,
        46,0,0,56,58,7,0,0,0,57,56,1,0,0,0,58,61,1,0,0,0,59,57,1,0,0,0,59,
        60,1,0,0,0,60,20,1,0,0,0,61,59,1,0,0,0,62,66,5,34,0,0,63,65,9,0,
        0,0,64,63,1,0,0,0,65,68,1,0,0,0,66,67,1,0,0,0,66,64,1,0,0,0,67,69,
        1,0,0,0,68,66,1,0,0,0,69,70,5,34,0,0,70,22,1,0,0,0,71,72,5,116,0,
        0,72,73,5,114,0,0,73,74,5,117,0,0,74,81,5,101,0,0,75,76,5,102,0,
        0,76,77,5,97,0,0,77,78,5,108,0,0,78,79,5,115,0,0,79,81,5,101,0,0,
        80,71,1,0,0,0,80,75,1,0,0,0,81,24,1,0,0,0,82,84,5,13,0,0,83,82,1,
        0,0,0,83,84,1,0,0,0,84,85,1,0,0,0,85,86,5,10,0,0,86,26,1,0,0,0,87,
        89,7,1,0,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,
        0,91,92,1,0,0,0,92,93,6,13,0,0,93,28,1,0,0,0,8,0,48,53,59,66,80,
        83,90,1,6,0,0
    ]

class SimpleLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    INT = 9
    FLOAT = 10
    STRING = 11
    BOOL = 12
    NEWLINE = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'-'", "'*'", "'/'", "'%'", "'+'", "'^'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "FLOAT", "STRING", "BOOL", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "INT", "FLOAT", "STRING", "BOOL", "NEWLINE", "WS" ]

    grammarFileName = "SimpleLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


